<?php
// Using the core functions, check if the user is logged in
require_once(__DIR__ . '/../settings/core.php');

// Check if user is logged in
if (!check_login()) {
    header("Location: ../login/login.php");
    exit();
}

// Also check if the user is an admin
if (!check_admin()) {
    // If the user is not an admin, redirect to the login page
    header("Location: ../login/login.php");
    exit();
}

// Include category controller for database operations
require_once(__DIR__ . '/../controllers/category_controller.php');

// RETRIEVE - Display categories in the system (only those created by the user who is logged in)
$user_id = $_SESSION['user_id'];
$categories = get_user_categories_ctr($user_id);
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <h1>Category Management</h1>
        <p>Welcome, <?php echo htmlspecialchars($_SESSION['user_firstname'] ?? 'Admin'); ?>!</p>

        <!-- CREATE - A form that takes the category's name (ID is autogenerated) -->
        <div class="row">
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h3>Add New Category</h3>
                    </div>
                    <div class="card-body">
                        <form id="addCategoryForm">
                            <div class="mb-3">
                                <label for="categoryName" class="form-label">Category Name</label>
                                <input type="text" class="form-control" id="categoryName" name="category_name" required>
                                <div class="form-text">Category names must be unique.</div>
                            </div>
                            <button type="submit" class="btn btn-primary">Add Category</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- RETRIEVE - Display categories in the system -->
        <div class="card">
            <div class="card-header">
                <h3>Your Categories</h3>
            </div>
            <div class="card-body">
                <div id="categoriesContainer">
                    <?php if (empty($categories)): ?>
                        <p>No categories found. Add your first category above.</p>
                    <?php else: ?>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Category Name</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="categoryTableBody">
                                <?php foreach ($categories as $category): ?>
                                    <tr id="category_<?php echo $category['cat_id']; ?>">
                                        <td><?php echo htmlspecialchars($category['cat_id']); ?></td>
                                        <td class="category-name"><?php echo htmlspecialchars($category['cat_name']); ?></td>
                                        <td>
                                            <!-- UPDATE - Display style collects updated values. Only the name is editable, not the ID -->
                                            <button class="btn btn-sm btn-warning edit-btn"
                                                onclick="editCategory(<?php echo $category['cat_id']; ?>, '<?php echo htmlspecialchars($category['cat_name']); ?>')">
                                                Edit
                                            </button>
                                            <!-- DELETE - Delete a category -->
                                            <button class="btn btn-sm btn-danger delete-btn"
                                                onclick="deleteCategory(<?php echo $category['cat_id']; ?>, '<?php echo htmlspecialchars($category['cat_name']); ?>')">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                <?php endforeach; ?>
                            </tbody>
                        </table>
                    <?php endif; ?>
                </div>
            </div>
        </div>

        <!-- Navigation -->
        <div class="mt-4">
            <a href="../index.php" class="btn btn-secondary">Back to Home</a>
            <a href="../login/logout.php" class="btn btn-outline-danger">Logout</a>
        </div>
    </div>

    <!-- UPDATE Modal - Only name is editable, not the ID -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="editCategoryForm">
                    <div class="modal-body">
                        <!-- ID is not editable -->
                        <input type="hidden" id="editCategoryId" name="category_id">
                        <div class="mb-3">
                            <label class="form-label">Category ID</label>
                            <input type="text" class="form-control" id="displayCategoryId" disabled>
                            <div class="form-text">ID cannot be changed</div>
                        </div>
                        <!-- Only the name is editable -->
                        <div class="mb-3">
                            <label for="editCategoryName" class="form-label">Category Name</label>
                            <input type="text" class="form-control" id="editCategoryName" name="category_name" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Alert Messages -->
    <div id="alertContainer" style="position: fixed; top: 20px; right: 20px; z-index: 1050;"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // CREATE - Handle add category form
        document.getElementById('addCategoryForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const categoryName = formData.get('category_name').trim();

            if (!categoryName) {
                showAlert('Category name is required', 'danger');
                return;
            }

            fetch('../actions/add_category_action.php', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(data.message, 'success');
                        this.reset();
                        refreshPage();
                    } else {
                        showAlert(data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('An error occurred while adding the category', 'danger');
                });
        });

        // UPDATE - Edit category function
        function editCategory(id, name) {
            document.getElementById('editCategoryId').value = id;
            document.getElementById('displayCategoryId').value = id;
            document.getElementById('editCategoryName').value = name;

            const editModal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
            editModal.show();
        }

        // Handle edit form submission
        document.getElementById('editCategoryForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const categoryName = formData.get('category_name').trim();

            if (!categoryName) {
                showAlert('Category name is required', 'danger');
                return;
            }

            fetch('../actions/update_category_action.php', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(data.message, 'success');
                        const editModal = bootstrap.Modal.getInstance(document.getElementById('editCategoryModal'));
                        editModal.hide();
                        refreshPage();
                    } else {
                        showAlert(data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('An error occurred while updating the category', 'danger');
                });
        });

        // DELETE - Delete category function
        function deleteCategory(id, name) {
            if (!confirm(`Are you sure you want to delete the category "${name}"?`)) {
            }

            const formData = new FormData();
            formData.append('category_id', id);

            fetch('../actions/delete_category_action.php', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(data.message, 'success');
                        refreshPage();
                    } else {
                        showAlert(data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('An error occurred while deleting the category', 'danger');
                });
        }

        // Utility functions
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            alertContainer.appendChild(alertDiv);

            // Auto-remove alert after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }

        function refreshPage() {
            setTimeout(() => {
                location.reload();
            }, 1500);
        }
    </script>
</body>

</html>